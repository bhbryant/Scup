<?xml version="1.0" encoding="utf-8"?>
<s:Group
	xmlns:fx="http://ns.adobe.com/mxml/2009"
	xmlns:s="library://ns.adobe.com/flex/spark"
	xmlns:mx="library://ns.adobe.com/flex/mx"
	xmlns:view="com.dasflash.soundcloud.scup.view.*"
	nativeDragEnter="nativeDragEnterHandler(event)"
	nativeDragDrop="nativeDragDropHandler(event)"
	click="list.selectedIndex=-1"
	>

	<fx:Script>
		<![CDATA[
			import com.dasflash.soundcloud.scup.events.MainWindowEvent;
			
			import flash.events.NativeDragEvent;
			
			import mx.collections.ICollectionView;
			import mx.events.DragEvent;
			
			import spark.components.supportClasses.ItemRenderer;
			
			[Bindable]
			[Inject (source="setData.title")]
			public var setTitle:String;
			
			[Bindable]
			[Inject (source="setData.trackCollection", twoWay="true")]
			public var tracks:ICollectionView;
			
			
			protected function nativeDragEnterHandler(event:NativeDragEvent):void
			{
				if (event.clipboard.hasFormat(ClipboardFormats.FILE_LIST_FORMAT)) {
					
					list.dropEnabled = false;
					
					var files:Array = event.clipboard.getData(ClipboardFormats.FILE_LIST_FORMAT) as Array;
					
					for each (var file:File in files) {
						
						// limit to .ogg, .mp3, .mp4 .flac, .aac, .wav(e) .aif(f) 
						switch (file.extension.toLowerCase()) {
							case "ogg": break;
							case "mp3": break;
							case "mp4": break;
							case "flac": break;
							case "aac": break;
							case "wav": break;
							case "wave": break;
							case "aif": break;
							case "aiff": break;
							
							// if none of the file extensions is met, return
							default: return;
						}
					}
					
					var iobject:* = flash.display.InteractiveObject(this);
					NativeDragManager.acceptDragDrop(iobject);
				} 
			}
			
			protected function nativeDragDropHandler(event:NativeDragEvent):void
			{
				var files:Array = event.clipboard.getData(ClipboardFormats.FILE_LIST_FORMAT) as Array;
				
				if (files) {
					dispatchEvent( new MainWindowEvent(MainWindowEvent.ADD_FILES, files, true) );
				}
			}

			protected function dragStartHandler(event:DragEvent):void
			{
				list.dropEnabled = true;
				
				// TODO close open tracklist item
			}
			
		]]>
	</fx:Script>
	
	<!--top border-->
	<s:Line xTo="{width}">
		<s:stroke>
			<mx:SolidColorStroke weight="1" color="#aaabad"/>
		</s:stroke>
	</s:Line>
	
	<!--background fill-->
	<s:Rect width="100%" height="100%" top="1">
		<s:fill>
			<s:SolidColor color="#DCDCDF"/>
		</s:fill>
	</s:Rect>
	
	<!--shadow-->
	<s:Rect width="100%" height="12" top="1">
		<s:fill>
			<s:LinearGradient rotation="90">
				<s:GradientEntry color="#CBCBCF" />
				<s:GradientEntry color="#DCDCDF" />
			</s:LinearGradient>
		</s:fill>
	</s:Rect>

	<s:Group width="100%" height="100%" left="0" right="0" top="0" bottom="0">
	
 		<!--<s:Label text="{setTitle || 'Set'} contains {list.dataProvider.length} track{list.dataProvider.length!=1?'s':''}"
            	textAlign="center" width="100%" top="11"/>-->
		
		<s:Label text="Drag files here to upload" visible="{tracks.length==0}" styleName="dropHereLabelHead"
				 includeInLayout="{tracks.length==0}" textAlign="center" width="100%" top="60"/>
		
		<s:Label text="We support AIFF, WAV, FLAC, OGG, MP3, AAC" visible="{tracks.length==0}" styleName="dropHereLabelSub"
				 includeInLayout="{tracks.length==0}" textAlign="center" width="100%" top="90"/>
            
		<s:List id="list" dataProvider="{tracks}" width="100%" height="100%" dragStart="dragStartHandler(event)"
				top="0" dragEnabled="true" dragMoveEnabled="true"
            	itemRenderer="com.dasflash.soundcloud.scup.view.TrackListItemRenderer"
            	skinClass="com.dasflash.soundcloud.scup.view.skins.ListSkin" 
            	/>
            
	</s:Group>
        
</s:Group>
