<?xml version="1.0" encoding="utf-8"?>

<!--

	 Copyright 2010 (c) Dorian Roy - dorianroy.com

	 This file is part of Scup.

	 Scup is free software: you can redistribute it and/or modify
	 it under the terms of the GNU General Public License as published by
	 the Free Software Foundation, either version 3 of the License, or
	 (at your option) any later version.

	 Scup is distributed in the hope that it will be useful,
	 but WITHOUT ANY WARRANTY; without even the implied warranty of
	 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	 GNU General Public License for more details.

	 You should have received a copy of the GNU General Public License
	 along with Scup. If not, see <http://www.gnu.org/licenses/>.

-->

<s:Skin xmlns:fx="http://ns.adobe.com/mxml/2009"
	xmlns:s="library://ns.adobe.com/flex/spark"
	xmlns:mx="library://ns.adobe.com/flex/mx"
	xmlns:view="com.dasflash.soundcloud.scup.view.*"
	xmlns:components="com.dasflash.soundcloud.scup.view.components.*">

	<fx:Script>
		<![CDATA[
			import com.dasflash.soundcloud.scup.events.AppEvent;
			import com.dasflash.soundcloud.scup.model.SetData;
			import com.dasflash.soundcloud.scup.model.TrackData;

			import mx.events.CalendarLayoutChangeEvent;


			protected function expandButtonChangeHandler(event:Event):void
			{
				hostComponent.currentState = expandButton.selected ? "expanded" : "collapsed";
			}

			protected function dateChangeHandler(event:CalendarLayoutChangeEvent):void
			{
				hostComponent.release_day = dateField.selectedDate.date;
				hostComponent.release_month = dateField.selectedDate.month + 1;
				hostComponent.release_year = dateField.selectedDate.fullYear;
			}
		]]>
	</fx:Script>

	<fx:Metadata>
        [HostComponent("com.dasflash.soundcloud.scup.view.DetailsPanel")]
    </fx:Metadata>

	<s:states>
		<s:State name="collapsed"/>
		<s:State name="expanded"/>
	</s:states>

	<s:transitions>
		<s:Transition>
			<s:Resize target="{this}"
				duration="300"/>
		</s:Transition>
	</s:transitions>

	<!--background-->
	<!-- bottom=-1 is a workaround to avoid flickering during the transition-->
	<s:Rect id="background"
		left="0"
		top="0"
		right="0"
		bottom="-1">
		<s:fill>
			<s:SolidColor color="#EBF1F9"/>
		</s:fill>
	</s:Rect>

	<s:VGroup width="100%"
		top="20"
		left="20"
		right="20"
		bottom="2"
		bottom.expanded="8"
		gap="0">

		<!-- standard fields -->
		<s:HGroup width="100%">

			<!-- artwork drop field -->
			<components:ArtworkDropField skinClass="com.dasflash.soundcloud.scup.view.skins.ArtworkDropFieldSkin"
				dropFile="hostComponent.artwork_data=event.file"
				removeFile="hostComponent.artwork_data=null"/>

			<s:VGroup width="100%"
				paddingBottom="10">

				<components:PlaceholderTextInput id="titleInput"
					width="100%"
					text="{hostComponent.title}"
					placeholder="New Set"
					change="hostComponent.title=titleInput.text"
					alpha="{hostComponent.title?1:0.6}"
					styleName="setDetailsHead"
					skinClass="com.dasflash.soundcloud.scup.view.skins.TextInputSkin"/>

				<components:PlaceholderTextArea id="descriptionInput"
					width="100%"
					height="50"
					text="{hostComponent.description}"
					placeholder="Add a description"
					change="hostComponent.description=descriptionInput.text"
					alpha="{hostComponent.description ? 1 : 0.6}"
					skinClass="com.dasflash.soundcloud.scup.view.skins.TextAreaSkin"/>

				<s:ToggleButton id="expandButton"
					skinClass="com.dasflash.soundcloud.scup.view.skins.ExpandButtonSkin"
					label="More Options"
					label.expanded="Hide Options"
					styleName="expandButton"
					change="expandButtonChangeHandler(event)"
					selected="{currentState=='expanded'}"/>

			</s:VGroup>

		</s:HGroup>

		<!--extra fields-->
		<mx:Grid id="grid"
			includeIn="expanded"
			width="100%"
			verticalGap="2"
			itemCreationPolicy="immediate">

			<mx:GridRow styleName="gridRow"
				width="100%">

				<!--genre-->
				<mx:GridItem width="100">
					<s:Group width="100%">
						<s:Label text="Genre:"
							styleName="bodySoft right"
							top="8"
							width="100%"/>
					</s:Group>
				</mx:GridItem>
				<mx:GridItem width="100%">
					<s:Group width="100%">
						<s:TextInput id="genreInput"
							text="{hostComponent.genre}"
							width="100%"
							maxChars="40"
							skinClass="com.dasflash.soundcloud.scup.view.skins.TextInputSkin"
							change="hostComponent.genre=genreInput.text"
							top="2"/>
					</s:Group>
				</mx:GridItem>

				<!--record label-->
				<mx:GridItem width="100">
					<s:Group width="100%">
						<s:Label text="Record Label:"
							styleName="bodySoft right"
							top="8"
							width="100%"/>
					</s:Group>
				</mx:GridItem>
				<mx:GridItem width="100%">
					<s:Group width="100%">
						<s:TextInput id="labelNameInput"
							text="{hostComponent.label_name}"
							width="100%"
							skinClass="com.dasflash.soundcloud.scup.view.skins.TextInputSkin"
							change="hostComponent.label_name=labelNameInput.text"
							top="2"/>
					</s:Group>
				</mx:GridItem>
			</mx:GridRow>

			<mx:GridRow styleName="gridRow"
				width="100%">

				<!-- set type -->
				<mx:GridItem width="100">
					<s:Group width="100%">
						<s:Label text="Set type:"
							styleName="bodySoft right"
							top="8"
							width="100%"/>
					</s:Group>
				</mx:GridItem>
				<mx:GridItem width="100%">
					<s:Group>
						<s:DropDownList id="playlistTypeDropDown"
							top="6"
							width="200"
							dataProvider="{hostComponent.playlistTypes}"
							prompt="Pick a type"
							selectedIndex="{hostComponent.selectedPlaylistTypeIndex}"
							skinClass="com.dasflash.soundcloud.scup.view.skins.DropDownListSkin"
							change="hostComponent.selectedPlaylistTypeIndex=playlistTypeDropDown.selectedIndex"/>
					</s:Group>
				</mx:GridItem>

				<!--release no.-->
				<mx:GridItem width="100">
					<s:Group width="100%">
						<s:Label text="Release number:"
							styleName="bodySoft right"
							top="8"
							width="100%"/>
					</s:Group>
				</mx:GridItem>
				<mx:GridItem width="100%">
					<s:Group width="100%">
						<s:TextInput id="releaseInput"
							text="{hostComponent.release}"
							width="100%"
							skinClass="com.dasflash.soundcloud.scup.view.skins.TextInputSkin"
							change="hostComponent.release=releaseInput.text"
							top="2"/>
					</s:Group>
				</mx:GridItem>
			</mx:GridRow>

			<mx:GridRow styleName="gridRow"
				width="100%">

				<!-- track type -->
				<mx:GridItem width="100">
					<s:Group width="100%">
						<s:Label text="Track type:"
							styleName="bodySoft right"
							top="8"
							width="100%"/>
					</s:Group>
				</mx:GridItem>
				<mx:GridItem width="100%">
					<s:Group>
						<s:DropDownList id="trackTypeDropDown"
							top="6"
							width="200"
							dataProvider="{TrackData.TRACK_TYPES}"
							prompt="Pick a type"
							selectedIndex="{hostComponent.selectedTrackTypeIndex}"
							skinClass="com.dasflash.soundcloud.scup.view.skins.DropDownListSkin"
							change="hostComponent.selectedTrackTypeIndex=trackTypeDropDown.selectedIndex"/>
					</s:Group>
				</mx:GridItem>

				<!--release date-->
				<mx:GridItem width="100">
					<s:Group width="100%">
						<s:Label text="Release date:"
							styleName="bodySoft right"
							top="8"
							width="100%"/>
					</s:Group>
				</mx:GridItem>
				<mx:GridItem width="100%">
					<mx:DateField id="dateField"
						change="dateChangeHandler(event)"
						selectedDate="{new Date()}"
						textInputStyleName="dateField"
						focusSkin="com.dasflash.soundcloud.scup.view.skins.FocusSkin"/>
				</mx:GridItem>
			</mx:GridRow>

			<mx:GridRow styleName="gridRow"
				width="100%">

				<!--keywords-->
				<mx:GridItem width="100">
					<s:Group width="100%">
						<s:Label text="Keywords:"
							styleName="bodySoft right"
							top="8"
							width="100%"/>
					</s:Group>
				</mx:GridItem>
				<mx:GridItem width="100%">
					<s:Group width="100%">
						<s:TextInput id="tagListInput"
							text="{hostComponent.tag_list}"
							width="100%"
							skinClass="com.dasflash.soundcloud.scup.view.skins.TextInputSkin"
							change="hostComponent.tag_list=tagListInput.text"
							top="2"
							toolTip="Separate multiple keywords with spaces"/>
					</s:Group>
				</mx:GridItem>

				<!--ean-->
				<mx:GridItem width="100">
					<s:Group width="100%">
						<s:Label text="EAN/UPC:"
							styleName="bodySoft right"
							top="8"
							width="100%"/>
					</s:Group>
				</mx:GridItem>
				<mx:GridItem width="100%">
					<s:Group width="100%">
						<s:TextInput id="eanInput"
							text="{hostComponent.ean}"
							width="100%"
							skinClass="com.dasflash.soundcloud.scup.view.skins.TextInputSkin"
							restrict="0-9"
							maxChars="13"
							change="hostComponent.ean=eanInput.text"
							top="2"/>
					</s:Group>
				</mx:GridItem>
			</mx:GridRow>

			<mx:GridRow styleName="gridRow"
				width="100%">

				<!--license-->
				<mx:GridItem width="100">
					<s:Group width="100%">
						<s:Label text="License:"
							styleName="bodySoft right"
							top="8"
							width="100%"/>
					</s:Group>
				</mx:GridItem>
				<mx:GridItem width="100%">
					<s:Group>
						<s:DropDownList id="licenseDropDown"
							top="6"
							width="200"
							dataProvider="{SetData.LICENSE_TYPES}"
							selectedIndex="{hostComponent.selectedLicenseIndex}"
							skinClass="com.dasflash.soundcloud.scup.view.skins.DropDownListSkin"
							change="hostComponent.selectedLicenseIndex=licenseDropDown.selectedIndex"/>
					</s:Group>
				</mx:GridItem>

				<!--buy link-->
				<mx:GridItem width="100">
					<s:Group width="100%">
						<s:Label text="Buy set link:"
							styleName="bodySoft right"
							top="8"
							width="100%"/>
					</s:Group>
				</mx:GridItem>
				<mx:GridItem width="100%">
					<s:HGroup width="100%"
						paddingTop="3">
						<s:TextInput id="purchaseUrlInput"
							text="{hostComponent.purchase_url || 'http://'}"
							width="100%"
							skinClass="com.dasflash.soundcloud.scup.view.skins.TextInputSkin"
							change="hostComponent.purchase_url=purchaseUrlInput.text"
							top="2"/>
						<!--copy to tracks button-->
						<s:Button skinClass="com.dasflash.soundcloud.scup.view.skins.CopyToTracksButtonSkin"
							enabled="{hostComponent.setData.trackCollection.length != 0}"
							click="hostComponent.copyToTracks()"
							toolTip="Copy fields to all tracks"/>
					</s:HGroup>
				</mx:GridItem>

			</mx:GridRow>

		</mx:Grid>

	</s:VGroup>

</s:Skin>

