<?xml version="1.0" encoding="utf-8"?>
<s:Skin xmlns:fx="http://ns.adobe.com/mxml/2009"
	xmlns:s="library://ns.adobe.com/flex/spark"
	xmlns:mx="library://ns.adobe.com/flex/mx">

	<fx:Metadata>
        [HostComponent("com.dasflash.soundcloud.scup.view.SharingPanel")]
    </fx:Metadata>

	<fx:Script>
		<![CDATA[
			import flash.net.URLRequest;
			import flash.net.navigateToURL;

			import spark.events.IndexChangeEvent;

			protected function sharingDropDownChangeHandler(event:IndexChangeEvent):void
			{
				hostComponent.selectedSharingIndex = sharingDropDown.selectedIndex;

				if (sharingDropDown.selectedIndex == 1) {
					hostComponent.currentState = "collapsed";
				}
			}

			override protected function stateChanged(oldState:String, newState:String, recursive:Boolean):void
			{
				super.stateChanged(oldState, newState, recursive);

				if (newState == "expanded") {
					callLater(sharedToInput.setFocus);
				}
			}
		]]>
	</fx:Script>


	<s:states>
		<s:State name="collapsed"/>
		<s:State name="expanded"/>
	</s:states>

	<s:transitions>
		<s:Transition>
			<s:Resize target="{this}"
				duration="300"/>
		</s:Transition>
	</s:transitions>

	<!--background-->
	<!-- bottom=-1 is a workaround to avoid flickering during the transition-->
	<s:Rect left="0"
		top="0"
		right="0"
		bottom="-1">
		<s:fill>
			<s:SolidColor color="#999999"/>
		</s:fill>
	</s:Rect>

	<!--divider line-->
	<s:Group width="100%">
		<s:Line width="100%">
			<s:stroke>
				<mx:SolidColorStroke color="0"/>
			</s:stroke>
		</s:Line>
	</s:Group>

	<s:HGroup width="100%"
		gap="0"
		left="20"
		top="1">

		<!-- left column-->
		<s:VGroup width="50%"
			gap="8"
			paddingBottom="8">

			<s:Group>
				<s:Label top="10"
					styleName="sharingPanelTitle"
					text="Sharing"/>
			</s:Group>

			<s:HGroup width="100%"
				verticalAlign="middle"
				gap="8">

				<s:DropDownList id="sharingDropDown"
					dataProvider="{hostComponent.sharingTypes}"
					selectedIndex="{hostComponent.selectedSharingIndex}"
					labelField="label"
					change="sharingDropDownChangeHandler(event)"/>

				<s:Label styleName="sharingPanelHelp"
					top="3"
					text="{sharingDropDown.selectedIndex==1?'The set and its tracks will be public'
						:'The set and its tracks will be private'}"/>

			</s:HGroup>

			<!-- invite button -->
			<s:ToggleButton skinClass="com.dasflash.soundcloud.scup.view.skins.ExpandButtonSkin"
				label="Invite People"
				label.expanded="Hide"
				styleName="expandButton expandButtonLight"
				visible="{!Boolean(sharingDropDown.selectedIndex==1)}"
				click="hostComponent.currentState=hostComponent.currentState=='expanded' ? '' : 'expanded'"/>

			<!-- invite text area -->
			<s:VGroup width="300"
				includeIn="expanded">
				<s:Label lineBreak="toFit"
					width="100%"
					text="Invite people by email. Separate multiple email addresses using a comma."
					styleName="sharingPanelHelp"/>
				<s:TextArea id="sharedToInput"
					width="100%"
					height="50"
					text="{hostComponent.sharedTo}"
					change="{hostComponent.sharedTo=sharedToInput.text}"
					toolTip="Separate multiple addresses by comma"/>
			</s:VGroup>

		</s:VGroup>

		<!-- vertical divider line-->
		<s:Group height="100%">
			<s:Line height="100%">
				<s:stroke>
					<mx:SolidColorStroke color="#878787"/>
				</s:stroke>
			</s:Line>
		</s:Group>

		<!-- right column-->
		<s:VGroup width="50%"
			gap="0">

			<!--downloadable checkbox-->
			<s:Group width="100%">
				<s:CheckBox id="downloadableCheckBox"
					selected="{hostComponent.downloadable}"
					label="Make original(s) downloadable"
					styleName="sharingPanelCB sharingPanelTitle"
					top="5"
					bottom="6"
					left="12"
					change="hostComponent.downloadable=downloadableCheckBox.selected"/>
			</s:Group>

			<!-- horizontal divider line-->
			<s:Group width="100%">
				<s:Line width="100%">
					<s:stroke>
						<mx:SolidColorStroke color="#878787"/>
					</s:stroke>
				</s:Line>
			</s:Group>

			<!--streamable checkbox-->
			<s:Group width="100%">
				<s:CheckBox id="streamableCheckBox"
					selected="{hostComponent.streamable}"
					label="Allow 128 kbps streaming"
					styleName="sharingPanelCB sharingPanelTitle"
					top="5"
					bottom="8"
					left="12"
					change="hostComponent.streamable=streamableCheckBox.selected"/>
			</s:Group>

		</s:VGroup>

	</s:HGroup>

</s:Skin>
