<?xml version="1.0" encoding="utf-8"?>
<s:SparkSkin xmlns:fx="http://ns.adobe.com/mxml/2009"
	xmlns:s="library://ns.adobe.com/flex/spark"
	alpha.disabled="0.5">

	<fx:Metadata>
    	[HostComponent("com.dasflash.soundcloud.scup.view.components.PlaceholderTextInput")]
    </fx:Metadata>

	<fx:Script>
		<![CDATA[
			[Bindable]
			public var hasFocus:Boolean;

			/* Define the skin elements that should not be colorized. */
			static private const exclusions:Array = ["background", "textDisplay", "placeholderDisplay"];

			/**
			 * @copy spark.skins.SparkSkin#colorizeExclusions
			 */
			override public function get colorizeExclusions():Array
			{
				return exclusions;
			}

			/* Define the content fill items that should be colored by the "contentBackgroundColor" style. */
			static private const contentFill:Array = ["bgFill"];

			/**
			 * @inheritDoc
			 */
			override public function get contentItems():Array
			{
				return contentFill;
			}

			protected function textView_focusInHandler(event:FocusEvent):void
			{
				hasFocus = true;
			}

			protected function textView_focusOutHandler(event:FocusEvent):void
			{
				hasFocus = false;
			}
		]]>

	</fx:Script>

	<s:states>
		<s:State name="normal"/>
		<s:State name="disabled"/>
	</s:states>

	<!-- background -->
	<s:Rect id="background"
		left="1"
		right="1"
		top="1"
		bottom="2"
		includeIn="normal"
		alpha="{int(hasFocus)}">
		<s:fill>
			<s:SolidColor id="bgFill"/>
		</s:fill>
	</s:Rect>

	<!-- text -->
	<s:RichEditableText id="textDisplay"
		focusIn="textView_focusInHandler(event)"
		focusOut="textView_focusOutHandler(event)"
		left="1"
		right="1"
		top="1"
		bottom="1"
		paddingLeft="3"
		paddingTop="5"
		paddingRight="3"
		paddingBottom="3"/>

	<!-- placeholder text -->
	<s:Label id="placeholderDisplay"
		text="{hostComponent.placeholder}"
		mouseEnabled="false"
		left="1"
		right="1"
		top="1"
		bottom="1"
		paddingLeft="3"
		paddingTop="5"
		paddingRight="3"
		paddingBottom="3"/>

</s:SparkSkin>
