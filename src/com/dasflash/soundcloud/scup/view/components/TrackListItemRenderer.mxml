<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009"
	xmlns:s="library://ns.adobe.com/flex/spark"
	xmlns:mx="library://ns.adobe.com/flex/mx"
	xmlns:view="com.dasflash.soundcloud.scup.view.*"
	xmlns:components="com.dasflash.soundcloud.scup.view.components.*"
	autoDrawBackground="false"
	clipAndEnableScrolling="true">

	<fx:Metadata>
		
		[Event(type="com.dasflash.soundcloud.scup.events.TrackListEvent", name="retryTrack")]
		[Event(type="com.dasflash.soundcloud.scup.events.TrackListEvent",name="deleteTrack")]
		
	</fx:Metadata>

	<fx:Script>
		<![CDATA[
			import com.dasflash.soundcloud.scup.events.TrackListEvent;
			import com.dasflash.soundcloud.scup.model.SetData;
			import com.dasflash.soundcloud.scup.model.TrackData;
			import com.dasflash.soundcloud.scup.view.skins.DeleteButtonSkin;
			import com.dasflash.soundcloud.scup.view.skins.TextInputSkinMultiLine;

			import flash.events.MouseEvent;
			import flash.net.navigateToURL;

			import mx.events.CalendarLayoutChangeEvent;
			import mx.managers.PopUpManager;


			override protected function getCurrentRendererState():String
			{
				if (dragging)
					return "dragging";

				if (expanded)
					return "expanded";

				if (hovered)
					return "hovered";

				if (hasState("normal"))
					return "normal";

				// If none of the above states are defined in the item renderer,
				// we return the empty string. This means the user-defined renderer
				// will display but essentially be non-interactive visually. 
				return null;
			}


			//----------------------------------
			//  expanded state
			//----------------------------------
			/**
			 *  @private
			 *  storage for the selected property
			 */
			private var _expanded:Boolean = false;

			/**
			 *  Set to <code>true</code> when the mouse is hovered over the item renderer.
			 *
			 *  @default false
			 */
			public function get expanded():Boolean
			{
				return _expanded;
			}

			/**
			 *  @private
			 */
			public function set expanded(value:Boolean):void
			{
				if (value != _expanded) {
					_expanded = value;

					setCurrentState(getCurrentRendererState(), true);
				}
			}

			protected function trackCompleteClickHandler(event:MouseEvent):void
			{
				navigateToURL(new URLRequest(data.permalink));
			}

			protected function deleteButtonClickHandler(event:MouseEvent):void
			{
				dispatchEvent(new TrackListEvent(TrackListEvent.DELETE_TRACK, TrackData(data)));
			}

			protected function retryButtonClickHandler(event:MouseEvent):void
			{
				dispatchEvent(new TrackListEvent(TrackListEvent.RETRY_TRACK, TrackData(data)));
			}
		]]>
	</fx:Script>

	<s:states>
		<s:State name="normal"
			stateGroups="collapsedStates"/>
		<s:State name="dragging"/>
		<s:State name="hovered"
			stateGroups="collapsedStates, hoveredStates"/>
		<s:State name="expanded"
			stateGroups="expandedStates"/>

	</s:states>

	<s:transitions>
		<mx:Transition>
			<s:Resize target="{this}"
				duration="200"/>
		</mx:Transition>
	</s:transitions>

	<!--background fill-->
	<s:Rect left="21"
		right="21"
		top="0"
		bottom="2"
		radiusX="4"
		radiusY="4">
		<s:fill>
			<s:LinearGradient rotation="90">
				<s:GradientEntry color="#EEEEEE"
					ratio="0.95"/>
				<s:GradientEntry color="#E6E6E6"/>
			</s:LinearGradient>
		</s:fill>
		<s:stroke>
			<s:SolidColorStroke color="#D0D0D0"/>
		</s:stroke>

	</s:Rect>

	<s:VGroup width="100%"
		left="20"
		right="20"
		gap="0"
		paddingBottom="2"
		excludeFrom="dragging">

		<!-- normal state elements -->
		<s:Group width="100%">

			<s:BitmapImage left="4"
				top="5"
				source="@Embed('assets/grip.png')"/>

			<!-- more options button -->
			<s:ToggleButton id="expandButton"
				left="21"
				top="9"
				skinClass="com.dasflash.soundcloud.scup.view.skins.ExpandButtonSkin"
				styleName="expandButton"
				change="expanded = expandButton.selected"
				mouseDown="event.stopPropagation()"
				selected="{currentState=='expanded'}"/>

			<!-- track number -->
			<s:Label text="{data.index + 1}."
				width="17"
				textAlign="right"
				color="#444444"
				top="8"
				left="34"/>

			<!-- track title -->
			<s:TextInput id="titleInput"
				width="420"
				left="50"
				top="2"
				bottom="1"
				text="{data.title}"
				mouseDown="event.stopPropagation()"
				change="if(data) data.title = titleInput.text"
				alpha="{data.title?1:0.6}"
				skinClass="com.dasflash.soundcloud.scup.view.skins.TextInputSkin"/>

			<!-- progress bar -->
			<components:SimpleProgressBar right="8"
				top="7"
				width="140"
				height="10"
				source="{data.asset_data}"
				visible="{data.isUploading}"
				skinClass="com.dasflash.soundcloud.scup.view.skins.SimpleProgressBarSkin"/>

			<!-- waiting label -->
			<s:Label text="Waiting..."
				top="8"
				right="28"
				visible="{!data.uploadComplete &amp;&amp; !data.isUploading}"
				styleName="trackListLinkButton"/>

			<!-- complete sign -->
			<mx:Image source="@Embed('assets/complete_icon.png')"
				visible="{data.id}"
				click="trackCompleteClickHandler(event)"
				mouseDown="event.stopPropagation()"
				top="4"
				right="8"
				toolTip="This track has been successfully uploaded. Click here to view it in your browser."/>

			<!-- complete button -->
			<mx:LinkButton label="Upload complete"
				skin="com.dasflash.soundcloud.scup.view.skins.LinkButtonSkin"
				top="2"
				right="28"
				visible="{data.id}"
				click="trackCompleteClickHandler(event)"
				mouseDown="event.stopPropagation()"
				styleName="trackListLinkButton"
				toolTip="This track has been successfully uploaded. Click here to view it in your browser."/>

			<!-- failed sign -->
			<mx:Image source="@Embed('assets/failed_icon.png')"
				top="4"
				right="8"
				visible="{data.uploadFailed}"
				click="retryButtonClickHandler(event)"
				mouseDown="event.stopPropagation()"
				toolTip="Uploading this track has failed. Click here to try it again."/>

			<!-- retry button -->
			<mx:LinkButton label="Retry upload"
				skin="com.dasflash.soundcloud.scup.view.skins.LinkButtonSkin"
				top="2"
				right="28"
				visible="{data.uploadFailed}"
				click="retryButtonClickHandler(event)"
				mouseDown="event.stopPropagation()"
				styleName="trackListLinkButton"
				toolTip="Uploading this track has failed. Click here to try it again."/>

		</s:Group>

		<!-- expanded state elements -->
		<s:VGroup width="100%"
			includeIn="expandedStates"
			paddingLeft="8"
			paddingRight="8"
			paddingBottom="4"
			id="expandedElements">

			<s:Group width="100%">

				<!-- delete button -->
				<s:Button id="deleteButton"
					left="3"
					top="5"
					click="deleteButtonClickHandler(event)"
					mouseDown="event.stopPropagation()"
					skinClass="com.dasflash.soundcloud.scup.view.skins.DeleteButtonSkin"
					toolTip="Remove this track from the list and delete it on the server"/>

				<!-- description -->
				<s:TextArea id="descrInput"
					left="26"
					width="584"
					height="37"
					mouseDown="event.stopPropagation()"
					text="{data.description || 'Add a description'}"
					change="if(data) data.description = descrInput.text"
					alpha="{data.description ? 1 : 0.6}"
					styleName="trackTextInput"
					skinClass="com.dasflash.soundcloud.scup.view.skins.TextInputSkinMultiLine"/>

			</s:Group>

			<mx:Grid id="grid"
				width="100%"
				includeIn="expandedStates"
				verticalGap="2">

				<mx:GridRow styleName="gridRow gridRowTrack"
					width="100%">

					<!--genre-->
					<mx:GridItem width="92">
						<s:Group width="100%">
							<s:Label text="Genre:"
								styleName="bodySoft right"
								top="8"
								width="100%"/>
						</s:Group>
					</mx:GridItem>
					<mx:GridItem width="201">
						<s:Group width="100%">
							<s:TextInput id="genreInput"
								text="{data.genre}"
								width="100%"
								maxChars="40"
								skinClass="com.dasflash.soundcloud.scup.view.skins.TextInputSkin"
								change="if(data) data.genre=genreInput.text"
								top="2"/>
						</s:Group>
					</mx:GridItem>

					<!--record label-->
					<mx:GridItem width="100">
						<s:Group width="100%">
							<s:Label text="Record Label:"
								styleName="bodySoft right"
								top="8"
								width="100%"/>
						</s:Group>
					</mx:GridItem>
					<mx:GridItem width="100%">
						<s:Group>
							<s:TextInput id="labelNameInput"
								text="{data.label_name}"
								width="196"
								skinClass="com.dasflash.soundcloud.scup.view.skins.TextInputSkin"
								change="if(data) data.label_name=labelNameInput.text"
								top="2"/>
						</s:Group>
					</mx:GridItem>
				</mx:GridRow>

				<mx:GridRow styleName="gridRow gridRowTrack"
					width="100%">

					<!--type-->
					<mx:GridItem width="92">
						<s:Group width="100%">
							<s:Label text="Track type:"
								styleName="bodySoft right"
								top="8"
								width="100%"/>
						</s:Group>
					</mx:GridItem>
					<mx:GridItem width="100%">
						<s:DropDownList id="typeDropDown"
							width="190"
							dataProvider="{data.trackTypes}"
							prompt="Pick a type"
							selectedIndex="{data.selectedTrackTypeIndex}"
							skinClass="com.dasflash.soundcloud.scup.view.skins.DropDownListSkin"
							change="data.selectedTrackTypeIndex=typeDropDown.selectedIndex;typeDropDown.invalidateSize()"/>
					</mx:GridItem>

					<!--release no.-->
					<mx:GridItem width="100">
						<s:Group width="100%">
							<s:Label text="Release number:"
								styleName="bodySoft right"
								top="8"
								width="100%"/>
						</s:Group>
					</mx:GridItem>
					<mx:GridItem width="100%">
						<s:Group>
							<s:TextInput id="releaseInput"
								text="{data.release}"
								width="196"
								skinClass="com.dasflash.soundcloud.scup.view.skins.TextInputSkin"
								change="data.release=releaseInput.text"
								top="2"/>
						</s:Group>
					</mx:GridItem>
				</mx:GridRow>

				<mx:GridRow styleName="gridRow gridRowTrack"
					width="100%">

					<!--tags-->
					<mx:GridItem width="92">
						<s:Group width="100%">
							<s:Label text="Keywords:"
								styleName="bodySoft right"
								top="8"
								width="100%"/>
						</s:Group>
					</mx:GridItem>
					<mx:GridItem width="201">
						<s:Group width="100%">
							<s:TextInput id="tagListInput"
								text="{data.tag_list}"
								width="100%"
								skinClass="com.dasflash.soundcloud.scup.view.skins.TextInputSkin"
								change="if(data) data.tag_list=tagListInput.text"
								top="2"
								toolTip="Separate multiple keywords with spaces"/>
						</s:Group>
					</mx:GridItem>

					<!--release date-->
					<mx:GridItem width="100">
						<s:Group width="100%">
							<s:Label text="Release date:"
								styleName="bodySoft right"
								top="8"
								width="100%"/>
						</s:Group>
					</mx:GridItem>
					<mx:GridItem width="100%">
						<mx:DateField id="dateField"
							change="data.releaseDate=dateField.selectedDate"
							selectedDate="{data ? data.releaseDate : null}"
							textInputStyleName="dateField"
							focusSkin="com.dasflash.soundcloud.scup.view.skins.FocusSkin"/>
					</mx:GridItem>
				</mx:GridRow>

				<mx:GridRow styleName="gridRow gridRowTrack"
					width="100%">

					<!--license-->
					<mx:GridItem width="92">
						<s:Group width="100%">
							<s:Label text="License:"
								styleName="bodySoft right"
								top="8"
								width="100%"/>
						</s:Group>
					</mx:GridItem>
					<mx:GridItem width="201">
						<s:DropDownList id="licenseDropDown"
							width="190"
							dataProvider="{SetData.LICENSE_TYPES}"
							selectedIndex="{data.selectedLicenseIndex}"
							skinClass="com.dasflash.soundcloud.scup.view.skins.DropDownListSkin"
							change="if(data) data.selectedLicenseIndex=licenseDropDown.selectedIndex;licenseDropDown.invalidateSize()"/>
					</mx:GridItem>

					<!--BPM-->
					<mx:GridItem width="100">
						<s:Group width="100%">
							<s:Label text="BPM:"
								styleName="bodySoft right"
								top="8"
								width="100%"/>
						</s:Group>
					</mx:GridItem>
					<mx:GridItem width="100%">
						<s:Group>
							<s:TextInput id="bpmInput"
								text="{data.bpm || ''}"
								width="80"
								skinClass="com.dasflash.soundcloud.scup.view.skins.TextInputSkin"
								restrict="0-9."
								maxChars="10"
								change="data.bpm=Number(bpmInput.text)"
								top="2"/>
						</s:Group>
					</mx:GridItem>
				</mx:GridRow>

				<mx:GridRow styleName="gridRow gridRowTrack"
					width="100%">

					<!--buy link-->
					<mx:GridItem width="92">
						<s:Group width="100%">
							<s:Label text="Buy track link:"
								styleName="bodySoft right"
								top="8"
								width="100%"/>
						</s:Group>
					</mx:GridItem>
					<mx:GridItem width="201">
						<s:Group width="100%">
							<s:TextInput id="purchaseUrlInput"
								text="{data.purchase_url || 'http://'}"
								width="100%"
								skinClass="com.dasflash.soundcloud.scup.view.skins.TextInputSkin"
								change="data.purchase_url=purchaseUrlInput.text"
								top="2"/>
						</s:Group>
					</mx:GridItem>

					<!--video link-->
					<mx:GridItem width="100">
						<s:Group width="100%">
							<s:Label text="Video URL:"
								styleName="bodySoft right"
								top="8"
								width="100%"/>
						</s:Group>
					</mx:GridItem>
					<mx:GridItem width="100%">
						<s:Group>
							<s:TextInput id="videoUrlInput"
								text="{data.video_url || 'http://'}"
								width="196"
								skinClass="com.dasflash.soundcloud.scup.view.skins.TextInputSkin"
								change="data.video_url=videoUrlInput.text"
								top="2"/>
						</s:Group>
					</mx:GridItem>
				</mx:GridRow>

			</mx:Grid>

		</s:VGroup>

	</s:VGroup>

</s:ItemRenderer>

